plugins {
    id 'com.android.application'
    id 'kotlin-android'
    id 'kotlin-kapt'
    id 'dagger.hilt.android.plugin'
}

android {
    compileSdkVersion 30
    buildToolsVersion "30.0.3"

    defaultConfig {
        applicationId "com.nab.weatherforecast"
        minSdkVersion 21
        targetSdkVersion 30
        versionCode 1
        versionName "1.0"

        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"
    }

    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
        }
    }
    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }
    kotlinOptions {
        jvmTarget = '1.8'
    }

    buildFeatures {
        viewBinding true
    }

}

dependencies {

    implementation "org.jetbrains.kotlin:kotlin-stdlib:$kotlin_version"
    implementation 'androidx.core:core-ktx:1.5.0'
    implementation 'androidx.appcompat:appcompat:1.3.0'
    implementation 'com.google.android.material:material:1.3.0'
    implementation 'androidx.constraintlayout:constraintlayout:2.0.4'
    implementation 'androidx.fragment:fragment-ktx:1.3.4'

    // testing
    testImplementation "org.mockito:mockito-core:$mockito_version"
    testImplementation "org.mockito:mockito-inline:$mockito_inline"
    testImplementation "androidx.arch.core:core-testing:$core_testing_version"
    testImplementation "org.jetbrains.kotlinx:kotlinx-coroutines-test:$coroutine_test_version"
    testImplementation "junit:junit:$junit_version"
    testImplementation "org.powermock:powermock-core:$powerMock"
    testImplementation "org.powermock:powermock-module-junit4:$powerMock"
    testImplementation "org.powermock:powermock-api-mockito2:$powerMock"
    testImplementation "org.powermock:powermock-classloading-xstream:$powerMock"
    androidTestImplementation "androidx.test.ext:junit:$ext_junit_version"
    androidTestImplementation "androidx.test.espresso:espresso-core:$espresso_core_version"



    // lifecycle
    implementation "androidx.lifecycle:lifecycle-viewmodel-ktx:$lifecycle_version"

    // coroutine
    implementation "org.jetbrains.kotlinx:kotlinx-coroutines-android:$coroutine_version"

    // hilt
    implementation "com.google.dagger:hilt-android:$hilt_version"
    kapt "com.google.dagger:hilt-android-compiler:$hilt_version"

    implementation "androidx.security:security-crypto:1.1.0-alpha03"

    // hilt module
    api "com.squareup.retrofit2:retrofit:$retrofit_version"
    api "com.squareup.okhttp3:logging-interceptor:$logging_intercepter_version"
    api "com.squareup.retrofit2:converter-gson:$gson_converter_version"

    // scale sp,dp
    implementation "com.intuit.sdp:sdp-android:$sdp_version"
    implementation "com.intuit.ssp:ssp-android:$ssp_version"

    implementation project(":domain")
    implementation project(":data")

}